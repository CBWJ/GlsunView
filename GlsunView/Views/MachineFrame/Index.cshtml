@model GlsunView.Models.DeviceInfo
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" charset="utf-8" />
    <link rel="stylesheet" href="~/Content/css/device.css" />
    <title>Index</title>
    <style>
        .module{
            zoom: 0.2;
        }
        .info_area{
            width:1050px;
            border: 1px solid black;
            border-top: 0;
            padding-top: 15px;
        }
        .info_area fieldset{
            border-color: #1bbd1b;
            margin: 0 10px;
            margin-bottom: 10px;
        }
        .info_area .device_info,.info_area .slot_info{
            border-spacing: 5px 10px;
        }
        .info_area .device_info td, .info_area .slot_info td{
            background-color: #eee;
        }
        .info_area .device_info td.lable{
            width: 100px;
            text-align: right;
        }
        .info_area .device_info td.value{
            width: 355px;
        }
        .info_area .device_info td.separator{
            width: 50px;
            background: transparent;
        }
        /*卡槽*/
        .info_area .slot_info th{
            background-color: #eee;
        }
        .info_area .slot_info td{
            text-align: center;
            white-space: nowrap;
        }
        .info_area .slot_info td.lable1{
            width: 80px;
        }
        .info_area .slot_info td.lable2{
            width: 100px;
        }
        .info_area .slot_info td.lable3{
            width: 150px;
        }
        .info_area .slot_info td.lable4{
            width: 200px;
        }
    </style>
</head>
<body>
    <div class="device_area">
        <table border="1" style="border-collapse:collapse;">
            <tbody></tbody>
        </table>
    </div>
    <div class="info_area">
        <fieldset>
            <legend>设备信息</legend>
            <table class="device_info">
                <tbody>
                    <tr>
                        <td class="lable">型号：</td>
                        <td class="value">@Model.Type</td>
                        <td class="separator"></td>
                        <td class="lable">系列号：</td>
                        <td class="value">@Model.SerialNumber</td>
                    </tr>
                    <tr>
                        <td class="lable">机架：</td>
                        <td class="value">@Model.Shelf</td>
                        <td class="separator"></td>
                        <td class="lable">IP地址：</td>
                        <td class="value">@Model.IP</td>
                    </tr>
                    <tr>
                        <td class="lable">机房：</td>
                        <td class="value">@Model.Room</td>
                        <td class="separator"></td>
                        <td class="lable">子网掩码：</td>
                        <td class="value">@Model.Mask</td>
                    </tr>
                    <tr>
                        <td class="lable">地点：</td>
                        <td class="value">@Model.Address</td>
                        <td class="separator"></td>
                        <td class="lable">MAC地址：</td>
                        <td class="value">@Model.MACAddr</td>
                    </tr>
                    <tr>
                        <td class="lable">描述：</td>
                        <td class="value" colspan="4">@Model.Description</td>
                    </tr>
                </tbody>
            </table>
        </fieldset>
        <fieldset>
            <legend>业务槽位</legend>
            <table class="slot_info">
                <thead>
                    <tr>
                        <th class="lable1">槽位</th>
                        <th class="lable2">状态</th>
                        <th class="lable3">类型</th>
                        <th class="lable3">工作模式</th>
                        <th class="lable3">硬件版本</th>
                        <th class="lable3">软件版本</th>
                        <th class="lable4">当前告警</th>
                    </tr>
                </thead>
                <tbody>

                </tbody>
            </table>
        </fieldset>
    </div>
    <script src="~/scripts/jquery-1.9.1.min.js"></script>
    <script src="~/scripts/lib/device_compenent.js"></script>
    <script>
        var deviceObject = JSON.parse('@Html.Raw(ViewBag.DeviceView)');
        var cardSlotInfo = JSON.parse('@Html.Raw(ViewBag.CardSlotInfo)');
        var arrBinkObject = new Array();
        var device = null;
        $(document).ready(function () {
            device = new window.glsun.Device(".device_area table tbody");
            var mcu = "";
            //设备不在线
            if (deviceObject.Type == "NoResponse") {
                device.init("", 1, {});
            } else {
                device.init(deviceObject.MCUType, deviceObject.Unit, {
                    click: function (param) {
                        //console.log(this.id);
                    },
                    dblclick: function () {
                        var res = this.id.replace("card-slot-", "");
                        console.log(res[0] + "双击");
                        var module = $(this);
                        var moduleType = "";
                        if (module.hasClass("edfa")) {
                            moduleType = "edfa";
                        } else if (module.hasClass("oeo")) {
                            moduleType = "oeo";
                        } else if (module.hasClass("olp")) {
                            moduleType = "olp";
                        }
                        if (parent.addNavigatorData) {
                            parent.addNavigatorData({
                                level: 3,
                                name: moduleType.toUpperCase(),
                                url: "/" + moduleType.toUpperCase() + "Card/Details?ip=" + deviceObject.IP + "&port=" + deviceObject.Port + "&slot=" + res + "&mfId=" + '@ViewBag.MFID'
                            });
                        }
                    }
                });
            }
            //插卡
            for (var i = 0; i < deviceObject.Slots.length; ++i) {
                var slot = deviceObject.Slots[i];
                if (slot.CardType != "NOCARD" && slot.IsInsert) {
                    device.insertCard(slot.SlotNumber, slot.CardType);
                }
            }
            setTimeout(adjustInfoFrameWidth, 200);
            //更新设备状态
            updateRequest();
            setInterval(function () {
                updateRequest();
            }, 2000);
            //闪灯处理
            setInterval(function () {
                for (var i = 0; i < arrBinkObject.length; ++i) {
                    //obj = {ctrl, lights}第一个控件，第二个闪烁灯名称
                    var obj = arrBinkObject[i].ctrl;
                    var lights = arrBinkObject[i].lights;
                    if (obj) {
                        if (obj instanceof glsun.ElectricMCU) {
                            obj.runningLightBlinking();
                        }
                        else if (obj instanceof glsun.EDFACard ||
                            obj instanceof glsun.OEOCard ||
                            obj instanceof glsun.OLPCard) {
                            for (var k = 0; k < lights.length; ++k) {
                                obj.ligthBlink(lights[k], "normal");
                            }
                        }
                        else if (obj instanceof glsun.FAN) {
                            obj.lightBlink("state", "normal");
                        }
                    }
                }
            }, 500);

            //卡槽信息
            updateSlotInfo(cardSlotInfo);
        });

        //调整信息框的宽度
        function adjustInfoFrameWidth() {
            var w = $(".device_area table").width();
            $(".info_area").width(w);
        }
        //更新请求
        function updateRequest() {
            $.post("@Url.Action("GetCardInfo", "Device")", { ip: deviceObject.IP, port: deviceObject.Port },
                function (data, status, jqXHR) {
                    if (data) {
                        if (data.Code == "") {
                            updateCardStatus(data.Data);
                            console.log("Success");
                        }
                        else if(data.Code == "Exception"){
                            console.log("Exception");
                            console.log(data.Data);
                        }
                    }
                }, "json");
            $.post("@Url.Action("GetCardInfo", "MachineFrame")", { ip: deviceObject.IP, port: deviceObject.Port },
                function (data, status, jqXHR) {
                    if (data) {
                        if (data.Code == "") {
                            updateSlotInfo(data.Data);
                            console.log("Success");
                        }
                        else if(data.Code == "Exception"){
                            console.log("Exception");
                            console.log(data.Data);
                        }
                    }
                }, "json");
        }
        function updateCardStatus(statusData) {
            //更新插卡信息
            arrBinkObject = [];
            //主控卡
            var nmu = statusData.NMUInfo;
            if (nmu.Power_1_Status == 0) {
                device.mcu.resetPowerLight1();
            }
            else if (nmu.Power_1_Status == 1) {
                device.mcu.setPowerLight1ToNormal();
            }
            if (nmu.Power_2_Status == 0) {
                device.mcu.resetPowerLight2()
            }
            else if (nmu.Power_2_Status == 1) {
                device.mcu.setPowerLight2ToNormal();
            }
            arrBinkObject.push({ ctrl: device.mcu, lights: [] });
            //风扇
            device.fan.setLightNormal_pwr();
            if (nmu.FAN_Status == 1) {
                device.fan.setLightNormal_state();
            } else if (nmu.FAN_Status == 2) {
                arrBinkObject.push({
                    ctrl: device.fan,
                    lights: []
                });
            } else if (nmu.FAN_Status == 3) {
                device.fan.resetLight_state();
            }
            var slots = statusData.Overview.Slots;
            for (var i = 0; i < slots.length; ++i) {
                var slot = slots[i];
                if (slot.IsInsert) {
                    //新的状态
                    var card = device.getCard(slot.SlotNumber);
                    if (card == null) {
                        device.insertCard(slot.SlotNumber, slot.CardType);
                        //新插入的话重新获取
                        card = device.getCard(slot.SlotNumber);
                    }
                    if (slot.CardInfo) {
                        if (slot.CardType == "EDFA") {
                            //var edfa = new glsun.EDFACard();
                            var edfa = card.card;
                            arrBinkObject.push({
                                ctrl: edfa,
                                lights: ["run"]
                            });
                            edfa.setNormal_pwr();
                            //输入光状态
                            if (slot.CardInfo.Input_Power_State == 1) {
                                edfa.resetLight_in();
                            } else if (slot.CardInfo.Input_Power_State == 0) {
                                edfa.setError_in();
                            }
                            //输出光状态
                            if (slot.CardInfo.Output_Power_State == 1) {
                                edfa.resetLight_out();
                            } else if (slot.CardInfo.Output_Power_State == 0) {
                                edfa.setError_out();
                            }
                            //模块温度状态
                            if (slot.CardInfo.Modlue_Temperature_State == 1) {
                                edfa.resetLight_mt();
                            } else if (slot.CardInfo.Modlue_Temperature_State == 0) {
                                edfa.setError_mt();
                            }
                            //泵浦温度状态
                            if (slot.CardInfo.PUMP_Temperature_State == 1) {
                                edfa.resetLight_pt();
                            } else if (slot.CardInfo.PUMP_Temperature_State == 0) {
                                edfa.setError_pt();
                            }
                        }
                        else if (slot.CardType == "OEO") {
                            //var oeo = new glsun.OEOCard();
                            var oeo = card.card;
                            oeo.setNormal_pwr();
                            arrBinkObject.push({
                                ctrl: oeo,
                                lights: ["run"]
                            });
                            for (var j = 0; j < slot.CardInfo.SFPSet.length; ++j) {
                                var sfp = slot.CardInfo.SFPSet[j];
                                //模块状态
                                if (sfp.Status == 1) {
                                    oeo.moduleInsert(sfp.SlotPosition);
                                } else if (sfp.Status == 0) {
                                    oeo.modulePullout(sfp.SlotPosition);
                                }
                                //收光状态
                                if (sfp.Rx_Power_State == 1) {
                                    oeo.setModuleLightToNormal(sfp.SlotPosition);
                                } else if (sfp.Rx_Power_State == 0) {
                                    oeo.resetModuleLight(sfp.SlotPosition);
                                }

                            }
                        }
                        else if (slot.CardType == "OLP") {
                            var olp = new glsun.OLPCard();
                            var olp = card.card;
                            olp.setNormal_pwr();
                            var olpBlinkLight = ["run"];
                            //自动模式Work_Mode
                            if (slot.CardInfo.Work_Mode == 1) {
                                olp.setNormal_auto();
                            } else if (slot.CardInfo.Work_Mode == 0) {
                                olp.resetLight_auto();
                            }
                            //ALM红灯状态
                            if (slot.CardInfo.ALM_State == 1) {
                                olp.setError_alm();
                            } else if (slot.CardInfo.ALM_State == 0) {
                                olp.resetLight_alm();
                            }
                            //R1绿灯灯状态
                            if (slot.CardInfo.R1_State == 1) {
                                olp.setNormal_r1();
                            } else if (slot.CardInfo.R1_State == 0) {
                                olp.resetLight_r1();
                            } else if (slot.CardInfo.R1_State == 2) {
                                olpBlinkLight.push("r1");
                            }
                            //R2绿灯状态
                            if (slot.CardInfo.R2_State == 1) {
                                olp.setNormal_r2();
                            } else if (slot.CardInfo.R2_State == 0) {
                                olp.resetLight_r2();
                            } else if (slot.CardInfo.R2_State == 2) {
                                olpBlinkLight.push("r2");
                            }
                            //TX绿灯状态
                            if (slot.CardInfo.TX_State == 1) {
                                olp.setNormal_tx();
                            } else if (slot.CardInfo.TX_State == 0) {
                                olp.resetLight_tx();
                            }
                            //LS绿灯状态
                            if (slot.CardInfo.LS_State == 1) {
                                olp.setNormal_ls();
                            } else if (slot.CardInfo.LS_State == 0) {
                                olp.resetLight_ls();
                            }
                            //Pri
                            if (slot.CardInfo.Manual_Switch_Channel == 1) {
                                olp.setNormal_prl()
                            } else {
                                olp.resetLight_prl();
                            }
                            arrBinkObject.push({
                                ctrl: olp,
                                lights: olpBlinkLight
                            });
                        }
                    }
                } else {//没插卡
                    card = device.getCard(slot.SlotNumber);
                    if (card != null) {
                        device.removeCard(slot.SlotNumber);
                    }
                }
            }
        }
        function updateSlotInfo(cardSlotInfo) {
            var $slot_info = $(".slot_info tbody");
            $slot_info.empty();
            for (i = 0; i < cardSlotInfo.length; ++i) {
                var slotInfo = cardSlotInfo[i];
                if (slotInfo) {
                    var html = '';
                    html += '<tr>';
                    html += '<td class="lable1">' + slotInfo.Slot + '</td>';
                    html += '<td class="lable3">' + slotInfo.Status + '</td>';
                    html += '<td class="lable2">' + slotInfo.CardType + '</td>';
                    html += '<td class="lable3">' + slotInfo.WorkMode + '</td>';
                    html += '<td class="lable3">' + slotInfo.HardwareVersion + '</td>';
                    html += '<td class="lable3">' + slotInfo.SoftwareVersion + '</td>';
                    html += '<td class="lable4">' + slotInfo.CurrentAlarm + '</td>';
                    html += '</tr>';
                    $slot_info.append(html);
                }
            }
        }
    </script>
</body>
</html>
